name: Node.js CI

on: pull_request

jobs:
  macos-build:
    runs-on: macos-latest
    name: Build on MacOS
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: "npm"
      - name: Cache Homebrew
        id: cache-homebrew
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/Homebrew
          key: ${{ runner.os }}-homebrew
      - name: Install Podman and Languagetool
        id: install-brew
        run: |
          brew install podman languagetool
      - name: Initialize Podman Machine
        id: initialize-podman-machine
        run: podman machine init
      - name: Start Podman Machine
        id: start-podman-machine
        run: |
          sudo /usr/local/opt/podman/bin/podman-mac-helper install
          brew services start podman
          podman machine start
      - name: Pre-warm Podman Service
        id: pull-languagetool-image
        run: |
          podman pull docker.io/erikvl87/languagetool:5.8
          podman run -d -p 127.0.0.1:8082:8010 --name languagetool erikvl87/languagetool:5.8
      - name: Start LanguageTool
        id: start-languagetool
        run: |
          echo "LTLINTER_MANAGED_CLASSPATH=/usr/local/opt/languagetool/libexec/languagetool-server.jar" >> $GITHUB_ENV
          echo "LTLINTER_TEST_SERVICES=true" >> $GITHUB_ENV
          # Start on 8085 for external tests
          /usr/local/bin/languagetool-server --port 8085 --allow-origin > ~/ltserver.log 2>&1 &
          sleep 2
      - run: npm install -g typescript vsce json
      - run: npm ci
      - run: npm run vscode:prepublish
      - run: npm run test-compile
      - name: Run Test
        run: |
          ps -ef|grep languagetool
          cat ~/ltserver.log
          podman ps -a
          npm test
      - name: ESLint
        run: npm run lint

  # call-workflow-build-ubuntu:
  #   uses: ./.github/worklows/build-ubuntu.yml
  # ubuntu-build:
  #   runs-on: ubuntu-22.04
  #   name: Build on Ubuntu
  #   env:
  #     DISPLAY: ":99.0"
  #     CI: true
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: lts/*
  #     - name: Start Xvfb
  #       id: start-xvfb
  #       run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  #     - name: Install Podman (4.x)
  #       id: install-podman
  #       # https://podman.io/getting-started/installation
  #       run: |
  #         sudo apt-get purge podman buildah
  #         sudo mkdir -p /etc/apt/keyrings
  #         curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key \
  #           | gpg --dearmor \
  #           | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
  #         echo \
  #           "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg]\
  #             https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" \
  #           | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
  #         sudo apt-get update
  #         sudo apt-get -y install podman jq
  #     - name: Set XDG_RUNTIME_DIR
  #       id: set-xdg_runtime_dir
  #       run: |
  #         echo "XDG_RUNTIME_DIR=/run/user/$UID" >> $GITHUB_ENV
  #         echo "DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$UID/bus" >> $GITHUB_ENV
  #     - name: Enable Linger for Podman
  #       id: enable-linger
  #       run: |
  #         loginctl enable-linger $(whoami)
  #         sleep 1
  #     - name: Start Podman Listening Service
  #       id: start-podman-listening-service
  #       run: |
  #         mkdir -p ${XDG_RUNTIME_DIR}/podman/
  #         podman system service --time=0 unix://${XDG_RUNTIME_DIR}/podman/podman.sock &
  #     - name: Pre-warm Podman Service
  #       id: pull-languagetool-image
  #       run: |
  #         podman version
  #         time podman pull docker.io/erikvl87/languagetool:5.8
  #         time podman run -d -p 127.0.0.1:8081:8010 --name languagetool  erikvl87/languagetool:5.8
  #     - name: Install LanguageTool
  #       id: install-languagetool
  #       run: |
  #         curl --silent --location https://languagetool.org/download/LanguageTool-5.8.zip --output ~/LanguageTool-5.8.zip
  #         unzip ~/LanguageTool-5.8.zip -d ~/
  #       # Unzips to /home/runner/LanguageTool-5.8
  #     - run: npm install -g typescript vsce json
  #     - run: npm ci
  #     - run: npm run vscode:prepublish
  #     - run: npm run test-compile
  #     - name: Test
  #       run: npm test
  #     - name: ESLint
  #       run: npm run lint

  # windows-build:
  #   runs-on: windows-latest
  #   name: Build on Windows
  #   env:
  #     CI: true
  #   steps:
  #     - name: Set git to use LF
  #       run: |
  #         git config --global core.autocrlf false
  #         git config --global core.eol lf
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: lts/*
  #     - uses: Vampire/setup-wsl@v1
  #     - name: Append scoop shims to path
  #       run: |
  #         echo "~\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  #     - name: Install Podman via Scoop
  #       id: install-podman-via-scoop
  #       run: |
  #         Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
  #         iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
  #         scoop install podman
  #     # - name: Download Podman Installer
  #     #   id: download-podman
  #     #   run:
  #     #     Invoke-WebRequest
  #     #     https://github.com/containers/podman/releases/download/v4.2.1/podman-v4.2.1.msi
  #     #     -o "D:\a\vscode-languagetool-linter\podman-v4.2.1.msi"
  #     # - name: Install Podman
  #     #   id: install-podman
  #     #   run: |
  #     #     msiexec /a "D:\a\vscode-languagetool-linter\podman-v4.2.1.msi" /passive /log "D:\a\vscode-languagetool-linter\podman.log"
  #     #     type "D:\a\vscode-languagetool-linter\podman.log"
  #     - name: Initialize Podman Machine
  #       id: initialize-podman-machine
  #       run: |
  #         wsl -l -v
  #         podman machine init
  #     - name: Start Podman Machine
  #       id: start-podman-machine
  #       run: podman machine start
  #     - name: Install LanguageTool
  #       id: install-languagetool
  #       run: choco install languagetool
  #     - run: npm install -g typescript vsce json
  #     - run: npm ci
  #     - run: npm run vscode:prepublish
  #     - run: npm run test-compile
  #     - run: npm test
  #       name: Test
  #     - run: npm run lint
  #       name: ESLint
