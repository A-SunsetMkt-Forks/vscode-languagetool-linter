name: Node.js CI - Push

on: push

jobs:
  # call-workflow-build-ubuntu:
  #   uses: ./.github/worklows/build-ubuntu.yml
  ubuntu-build:
    runs-on: ubuntu-22.04
    name: Build on Ubuntu
    env:
      DISPLAY: ":99.0"
      CI: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: "npm"
      - name: Cache Homebrew
        id: cache-homebrew
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/Homebrew
          key: ${{ runner.os }}-homebrew
      # - name: Install Stuff
      #   id: install-stuff
      #   run: |
      #     sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      #     sudo /etc/init.d/dbus start &> /dev/null
      - name: Start Xvfb
        id: start-xvfb
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 +extension GLX +render -noreset >> $HOME/xsession.log 2>&1 &
      - name: Setup Homebrew
        id: setup-homebrew
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
      - name: Install Podman
        id: install-brew-podman
        run: |
          brew install podman
          brew services restart podman
          podman version
      # - name: Install Podman (4.x)
      #   id: install-podman
      #   # https://podman.io/getting-started/installation
      #   run: |
      #     sudo apt-get purge podman buildah
      #     sudo mkdir -p /etc/apt/keyrings
      #     curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key \
      #       | gpg --dearmor \
      #       | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
      #     echo \
      #       "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg]\
      #         https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" \
      #       | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
      #     sudo apt-get update
      #     sudo apt-get -y install podman jq
      - name: Set XDG_RUNTIME_DIR
        id: set-xdg_runtime_dir
        run: |
          echo "XDG_RUNTIME_DIR=/run/user/$UID" >> $GITHUB_ENV
          echo "DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$UID/bus" >> $GITHUB_ENV
      # - name: Enable Linger for Podman
      #   id: enable-linger
      #   run: |
      #     loginctl enable-linger $(whoami)
      #     sleep 1
      # - name: Start Podman Listening Service
      #   id: start-podman-listening-service
      #   run: |
      #     mkdir -p ${XDG_RUNTIME_DIR}/podman/
      #     podman system service --time=0 unix://${XDG_RUNTIME_DIR}/podman/podman.sock &
      - name: Pre-warm Podman Service
        id: pull-languagetool-image
        run: |
          podman version
          podman pull docker.io/erikvl87/languagetool:5.8
          podman run -d -p 8082:8010 --name languagetool-test  erikvl87/languagetool:5.8
      - name: Install LanguageTool
        id: install-languagetool
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install languagetool
          echo "LTLINTER_MANAGED_CLASSPATH=/home/linuxbrew/.linuxbrew/opt/languagetool/libexec/languagetool-server.jar" >> $GITHUB_ENV
          echo "LTLINTER_TEST_SERVICES=true" >> $GITHUB_ENV
          # Start LT on port 8085
          /home/linuxbrew/.linuxbrew/opt/languagetool/bin/languagetool-server --port 8085 --allow-origin > /dev/null 2>&1 &
      - run: npm install -g typescript vsce json
      - run: npm ci
      - run: npm run vscode:prepublish
      - run: npm run test-compile
      - name: Test
        run: npm test
      - name: ESLint
        run: npm run lint
